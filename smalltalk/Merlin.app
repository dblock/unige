

Application create: #Merlin with:
    (#( AbtViewApplication)
        collect: [:each | Smalltalk at: each ifAbsent: [
            Application errorPrerequisite: #Merlin missing: each]])!

Merlin becomeDefault!
AbtAppBldrView subclass: #IngredientManagerView
    instanceVariableNames: 'aIngredientManager result '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
AbtAppBldrView subclass: #IngredientView
    instanceVariableNames: 'result aIngredient '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
AbtAppBldrView subclass: #MerlinCook
    instanceVariableNames: 'recipesContainerTemp totalWeight ingredientContainer localIngredientManager totalPrice recipeManager merlinRecipeManager ingredientContainerTemp ingredientManager recipesContainer localRecipeManager '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
AbtAppBldrView subclass: #RecipeManagerView
    instanceVariableNames: 'aIngredientManager aRecipeManager result '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
AbtAppBldrView subclass: #RecipeView
    instanceVariableNames: 'totalWeight totalTime result totalPrice aIngredientManager aRecipeManager aRecipe '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
AbtViewApplicationAbtPackage subclass: #MerlinAbtPackage
    instanceVariableNames: ''
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
Object subclass: #Cookable
    instanceVariableNames: 'description time name '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
Cookable subclass: #Ingredient
    instanceVariableNames: 'price weight '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
Cookable subclass: #Recipe
    instanceVariableNames: 'saleWeight ingredients salePrice saleTime '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
Object subclass: #CookableManager
    instanceVariableNames: 'totalPrice totalWeight ingredientBag contained totalTime '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
CookableManager subclass: #IngredientManager
    instanceVariableNames: ''
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
CookableManager subclass: #RecipeManager
    instanceVariableNames: 'aIngredientManager '
    classVariableNames: ''
    poolDictionaries: ''!

Merlin becomeDefault!
Application subclass: #Merlin
    instanceVariableNames: ''
    classVariableNames: ''
    poolDictionaries: ''!


Merlin becomeDefault!

!Cookable class publicMethods !

new
	"create a new uninitialized cookable class"

	| aCookable |
	
	aCookable := super new.	
	aCookable name: 'new element'.
	aCookable time: 0.
	aCookable price: 0.
	^aCookable! !

!Cookable class privateMethods !

IS_description
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: String;
		 setSelector: #description:;
		 getSelector: #description;
		 changeSymbol: #description)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #name put: self IS_name;
		featureNamed: #description put: self IS_description;
		featureNamed: #time put: self IS_time!

IS_name
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: String;
		 setSelector: #name:;
		 getSelector: #name;
		 changeSymbol: #name)!

IS_time
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #time:;
		 getSelector: #time;
		 changeSymbol: #time)! !


!Cookable publicMethods !

description
	"Return the value of description."

	^description!

description: aString
	"Save the value of description."

	description := aString.
	self signalEvent: #description
		 with: aString. !

name
	"Return the value of name."

	^name!

name: aString
	"Save the value of name."

	name := aString.
	self signalEvent: #name
		 with: aString. !

printString
	
	description isNil
		ifFalse: [
			description = ''
			ifFalse: [^name, ' - ', description]
			ifTrue: [^name].
			]
	 	ifTrue: [^name].
	!

time
	"Return the value of time."

	^time!

time: aNumber
	"Save the value of time."

	time := aNumber.
	self signalEvent: #time
		 with: aNumber. ! !


!CookableManager class publicMethods !

new
	"create a new cookable elements manager"

	| CookableManagerNew |
	CookableManagerNew := super new.
	CookableManagerNew contained: OrderedCollection new.
	^CookableManagerNew! !

!CookableManager class privateMethods !

IS_add_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aCookableObject');
			 yourself);
		 selector: #add:)!

IS_contained
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: OrderedCollection;
		 setSelector: #contained:;
		 getSelector: #contained;
		 changeSymbol: #contained)!

IS_ingredientBag
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: OrderedCollection;
		 setSelector: #ingredientBag:;
		 getSelector: #ingredientBag;
		 changeSymbol: #ingredientBag)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #contained put: self IS_contained;
		featureNamed: #remove: put: self IS_remove_;
		featureNamed: #add: put: self IS_add_;
		featureNamed: #recalculatePrice put: self IS_recalculatePrice;
		featureNamed: #totalPrice put: self IS_totalPrice;
		featureNamed: #totalWeight put: self IS_totalWeight;
		featureNamed: #recalculateWeight put: self IS_recalculateWeight;
		featureNamed: #recalculateBag put: self IS_recalculateBag;
		featureNamed: #ingredientBag put: self IS_ingredientBag;
		featureNamed: #totalTime put: self IS_totalTime;
		featureNamed: #recalculateTime put: self IS_recalculateTime!

IS_recalculateBag
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculateBag)!

IS_recalculatePrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculatePrice)!

IS_recalculateTime
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculateTime)!

IS_recalculateWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculateWeight)!

IS_remove_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aCookable');
			 yourself);
		 selector: #remove:)!

IS_totalPrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalPrice:;
		 getSelector: #totalPrice;
		 changeSymbol: #totalPrice)!

IS_totalTime
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalTime:;
		 getSelector: #totalTime;
		 changeSymbol: #totalTime)!

IS_totalWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalWeight:;
		 getSelector: #totalWeight;
		 changeSymbol: #totalWeight)! !


!CookableManager publicMethods !

add: aCookableObject
	"add a cookable object to the container"
	
	contained add: aCookableObject.
	self recalculatePrice.
	self recalculateWeight.
	self recalculateTime.
	self recalculateBag.
	^ self!

collectBag

	| aNewContainer |
	
	aNewContainer := OrderedCollection new.
	contained do: [:each | aNewContainer := aNewContainer , each collectBag ].
	^aNewContainer.!

contained
	"Return the value of contained."

	^contained!

contained: anOrderedCollection
	"Save the value of contained."

	contained := anOrderedCollection.
	self signalEvent: #contained
		 with: anOrderedCollection. !

do: aBlock
	"cookable elements iterator"
	contained do: aBlock!

includes: aCookable
	"check that a cookable element exists already"

	^contained includes: aCookable!

ingredientBag
	"Return the value of ingredientBag."

	^ingredientBag!

ingredientBag: anOrderedCollection
	"Save the value of ingredientBag."

	ingredientBag := anOrderedCollection.
	self signalEvent: #ingredientBag
		 with: anOrderedCollection. !

occurencesOf: aCookable
	"count the occurences of a cookable object"
	
	^ contained occurencesOf aCookable!

recalculateBag

	self ingredientBag: self collectBag.!

recalculatePrice

	| aPrice |
	aPrice := 0.
	contained do: [:each | aPrice := aPrice + each price].
	self totalPrice: aPrice.
	^ aPrice!

recalculateTime

	| aTime |
	aTime := 0.
	contained do: [:each | aTime := aTime + each time].
	self totalTime: aTime.
	^ aTime!

recalculateWeight

	| aWeight |
	aWeight := 0.
	contained do: [:each | aWeight := aWeight + each weight].
	self totalWeight: aWeight.
	^ aWeight!

remove: aCookable
	"Perform the remove: action."

	contained remove: aCookable.
	self recalculatePrice.
	self recalculateWeight.
	self recalculateTime.
	self recalculateBag.
	^self.!

totalPrice
	"Return the value of totalPrice."

	^totalPrice!

totalPrice: aNumber
	"Save the value of totalPrice."

	totalPrice := aNumber.
	self signalEvent: #totalPrice
		 with: aNumber. !

totalTime
	"Return the value of totalTime."

	^totalTime!

totalTime: aNumber
	"Save the value of totalTime."

	totalTime := aNumber.
	self signalEvent: #totalTime
		 with: aNumber. !

totalWeight
	"Return the value of totalWeight."

	^totalWeight!

totalWeight: aNumber
	"Save the value of totalWeight."

	totalWeight := aNumber.
	self signalEvent: #totalWeight
		 with: aNumber. ! !


!Ingredient class publicMethods !

new
	"initialize a new ingredient"
	
	| aIngredientNew |

	aIngredientNew := super new.
	aIngredientNew weight: 0.
	aIngredientNew price: 0.
	^aIngredientNew.
! !

!Ingredient class privateMethods !

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #weight put: self IS_weight;
		featureNamed: #price put: self IS_price!

IS_price
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Decimal;
		 setSelector: #price:;
		 getSelector: #price;
		 changeSymbol: #price)!

IS_weight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #weight:;
		 getSelector: #weight;
		 changeSymbol: #weight)! !


!Ingredient publicMethods !

collectBag

	| aNewContainer |

	aNewContainer := OrderedCollection new.
	aNewContainer add: self.
	^ aNewContainer.!

price
	"Return the value of price."

	^price!

price: aDecimal
	"Save the value of price."

	price := aDecimal.
	self signalEvent: #price
		 with: aDecimal. !

weight
	"Return the value of weight."

	^weight!

weight: aNumber
	"Save the value of weight."

	weight := aNumber.
	self signalEvent: #weight
		 with: aNumber. ! !


!IngredientManager class privateMethods !

IS_addNew
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #addNew)!

IS_edit_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aIngredient');
			 yourself);
		 selector: #edit:)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #edit: put: self IS_edit_;
		featureNamed: #addNew put: self IS_addNew;
		featureNamed: #manage put: self IS_manage!

IS_manage
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #manage)! !


!IngredientManager publicMethods !

addNew
	"Perform the addNew action."

	| aIngredient |

	aIngredient := Ingredient new.	
	(self edit: aIngredient)
		ifTrue: [contained add: aIngredient]
!

edit: aIngredient
	"Perform the edit: action."

	| aIView |

	aIView := IngredientView new.
	aIView openOn: aIngredient.
	aIView suspendExecutionUntilRemoved.
	^aIView result.!

manage

	| aView oldContained |

	oldContained := self contained deepCopy.
	
	aView := IngredientManagerView new.
	aView openOn: self.
	aView suspendExecutionUntilRemoved.

	aView result
		ifFalse: [self contained: oldContained deepCopy].

! !


!IngredientManagerView class privateMethods !

IS_aIngredientManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: IngredientManager;
		 setSelector: #aIngredientManager:;
		 getSelector: #aIngredientManager;
		 changeSymbol: #aIngredientManager)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #aIngredientManager put: self IS_aIngredientManager;
		featureNamed: #result put: self IS_result;
		featureNamed: #returnTrue put: self IS_returnTrue;
		featureNamed: #returnFalse put: self IS_returnFalse!

IS_result
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #result:;
		 getSelector: #result;
		 changeSymbol: #result)!

IS_returnFalse
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnFalse)!

IS_returnTrue
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnTrue)! !


!IngredientManagerView publicMethods !

aIngredientManager
	"Return the value of aIngredientManager."

	^aIngredientManager!

aIngredientManager: anIngredientManager
	"Save the value of aIngredientManager."

	aIngredientManager := anIngredientManager.
	self signalEvent: #aIngredientManager
		 with: anIngredientManager. !

openOn: anaIngredientManager

	self aIngredientManager: anaIngredientManager.	
	self openApplicationModalWidget.
!

result
	"Return the value of result."

	^result!

result: aBoolean
	"Save the value of result."

	result := aBoolean.
	self signalEvent: #result
		 with: aBoolean. !

returnFalse

	self result: false.!

returnTrue

	self result: true.! !

!IngredientManagerView privateMethods !

abtBuildInternals
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for initializing the receiver by
	creating all the subparts and connections specified in the Composition Editor"

	| abtSeparatedConstants window removeRecipe pushButton1 addRecipe list1 label1 pushButton3
	 pushButton2 ingredientManagerVar conn3 conn4 conn5 conn6 conn7 conn8 conn9 conn10 conn11 conn12
	 conn23 conn24 conn25 conn16 |
	abtSeparatedConstants := self class abtSeparatedConstants.
	self subpartNamed: 'Window' put: (window := AbtShellView newPart
			subpartNamed: 'RemoveRecipe' put: (removeRecipe := AbtPushButtonView newPart);
			subpartNamed: 'Push Button1' put: (pushButton1 := AbtPushButtonView newPart);
			subpartNamed: 'AddRecipe' put: (addRecipe := AbtPushButtonView newPart);
			subpartNamed: 'List1' put: (list1 := AbtListView newPart);
			subpartNamed: 'Label1' put: (label1 := AbtLabelView newPart);
			subpartNamed: 'Push Button3' put: (pushButton3 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button2' put: (pushButton2 := AbtPushButtonView newPart)).
	self subpartNamed: 'Ingredient Manager Var' put: (ingredientManagerVar := AbtVariable newPart abtAttachPart).
	self 
		 primaryPart: window.
	window 
		 shellDecorations: 122;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new
				offset: 60);
			rightEdge: (AbtEdgeConstant new
				offset: 363);
			topEdge: (AbtEdgeConstant new
				offset: 32);
			bottomEdge: (AbtEdgeConstant new
				offset: 282));
		 title: (abtSeparatedConstants at: 1)          " 'Ingredient Manager' " .
	removeRecipe 
		 object: (abtSeparatedConstants at: 2)          " 'Remove' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 18);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 97);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 204);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	pushButton1 
		 object: (abtSeparatedConstants at: 3)          " 'Edit' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 133);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 97);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 204);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	addRecipe 
		 object: (abtSeparatedConstants at: 4)          " 'Add' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 248);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 97);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 204);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	list1 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 13);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 345);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 31);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 158)).
	label1 
		 object: (abtSeparatedConstants at: 5)          " 'Ingredients' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 14);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 9);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton3 
		 object: (abtSeparatedConstants at: 6)          " 'Cancel' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 62);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 88);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 244);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	pushButton2 
		 object: (abtSeparatedConstants at: 7)          " 'OK' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 212);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 88);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 244);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	self attributeConnections add: (conn3 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid
		toTarget: removeRecipe
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled).
	self attributeConnections add: (conn4 := AbtAttributeToAttributeConnection new
		connectSource: pushButton1
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled
		toTarget: list1
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid).
	conn5 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	conn6 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	conn7 := AbtEventToActionConnection new
		connectSource: removeRecipe
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: ingredientManagerVar
		variableFeatureName: #remove:
		featureSelector: #'IS_remove_'.
	self attributeConnections add: (conn8 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn7
		variableFeatureName: 'aCookable'
		featureSelector: #'IS_aCookable').
	conn9 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: ingredientManagerVar
		variableFeatureName: #edit:
		featureSelector: #'IS_edit_'.
	self attributeConnections add: (conn10 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn9
		variableFeatureName: 'aIngredient'
		featureSelector: #'IS_aIngredient').
	conn11 := AbtEventToActionConnection new
		connectSource: addRecipe
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: ingredientManagerVar
		variableFeatureName: #addNew
		featureSelector: #'IS_addNew'.
	self attributeConnections add: (conn12 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #items
		feature: AbtListView IS_items
		toTarget: ingredientManagerVar
		variableFeatureName: #contained
		featureSelector: #'IS_contained').
	self attributeConnections add: (conn23 := AbtAttributeToAttributeConnection new
		connectSource: ingredientManagerVar
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aIngredientManager
		feature: IngredientManagerView IS_aIngredientManager).
	conn24 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnFalse
		feature: IngredientManagerView IS_returnFalse.
	conn25 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnTrue
		feature: IngredientManagerView IS_returnTrue.
	conn16 := AbtEventToActionConnection new
		connectSource: window
		featureName: #openedWidget
		feature: AbtShellView IS_openedWidget;
		actionProvider: self
		featureName: #returnFalse
		feature: IngredientManagerView IS_returnFalse.
	self initializeAttributeConnections.
	self finalInitialize.
! !


!IngredientView class privateMethods !

IS_aIngredient
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Ingredient;
		 setSelector: #aIngredient:;
		 getSelector: #aIngredient;
		 changeSymbol: #aIngredient)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #aIngredient put: self IS_aIngredient;
		featureNamed: #result put: self IS_result;
		featureNamed: #returnTrue put: self IS_returnTrue;
		featureNamed: #returnFalse put: self IS_returnFalse!

IS_result
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #result:;
		 getSelector: #result;
		 changeSymbol: #result)!

IS_returnFalse
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnFalse)!

IS_returnTrue
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnTrue)! !


!IngredientView publicMethods !

aIngredient
	"Return the value of aIngredient."

	^aIngredient!

aIngredient: anIngredient
	"Save the value of aIngredient."

	aIngredient := anIngredient.
	self signalEvent: #aIngredient
		 with: anIngredient. !

openOn: aIngredientIncoming
	
	"show an ingredient contents"
	
	self aIngredient: aIngredientIncoming.	
	self openApplicationModalWidget.!

result
	"Return the value of result."

	^result!

result: aBoolean
	"Save the value of result."

	result := aBoolean.
	self signalEvent: #result
		 with: aBoolean. !

returnFalse

	self result: false.!

returnTrue

	self result: true.! !

!IngredientView privateMethods !

abtBuildInternals
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for initializing the receiver by
	creating all the subparts and connections specified in the Composition Editor"

	| abtSeparatedConstants window descriptionLabel descriptionField abtStringConverter nameLabel
	 nameField abtStringConverter_1 priceLabel priceField abtDecimalConverter weightLabel weightField
	 abtNumberConverter pushButton1 pushButton2 descriptionField1 abtStringConverter_2 aIngredient_1
	 conn7 conn8 conn17 conn18 conn19 conn29 conn9 conn20 conn11 conn12 |
	abtSeparatedConstants := self class abtSeparatedConstants.
	self subpartNamed: 'Window' put: (window := AbtShellView newPart
			subpartNamed: 'descriptionLabel' put: (descriptionLabel := AbtLabelView newPart);
			subpartNamed: 'descriptionField' put: (descriptionField := AbtTextView newPart);
			subpartNamed: 'nameLabel' put: (nameLabel := AbtLabelView newPart);
			subpartNamed: 'nameField' put: (nameField := AbtTextView newPart);
			subpartNamed: 'priceLabel' put: (priceLabel := AbtLabelView newPart);
			subpartNamed: 'priceField' put: (priceField := AbtTextView newPart);
			subpartNamed: 'weightLabel' put: (weightLabel := AbtLabelView newPart);
			subpartNamed: 'weightField' put: (weightField := AbtTextView newPart);
			subpartNamed: 'Push Button1' put: (pushButton1 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button2' put: (pushButton2 := AbtPushButtonView newPart);
			subpartNamed: 'descriptionField1' put: (descriptionField1 := AbtTextView newPart)).
	self subpartNamed: 'aIngredient' put: (aIngredient_1 := AbtVariable newPart abtAttachPart).
	self 
		 primaryPart: window.
	window 
		 shellDecorations: 122;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new
				offset: 126);
			rightEdge: (AbtEdgeConstant new
				offset: 314);
			topEdge: (AbtEdgeConstant new
				offset: 61);
			bottomEdge: (AbtEdgeConstant new
				offset: 169));
		 title: (abtSeparatedConstants at: 1)          " 'Ingredient' " .
	descriptionLabel 
		 object: #description;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 52);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 81);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 39);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 21)).
	descriptionField 
		 converter: (abtStringConverter := AbtStringConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 143);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 38);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	nameLabel 
		 object: #name;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 52);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 81);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 9);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 21)).
	nameField 
		 converter: (abtStringConverter_1 := AbtStringConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 143);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 7);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	priceLabel 
		 object: #price;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 52);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 81);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 69);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 21)).
	priceField 
		 converter: (abtDecimalConverter := AbtDecimalConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 143);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 69);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 24)).
	weightLabel 
		 object: #weight;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 52);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 81);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 99);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 21)).
	weightField 
		 converter: (abtNumberConverter := AbtNumberConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 143);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 100);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton1 
		 object: (abtSeparatedConstants at: 2)          " 'OK' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 186);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 72);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 136);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton2 
		 object: (abtSeparatedConstants at: 3)          " 'Cancel' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 58);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 72);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 136);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	descriptionField1 
		 converter: (abtStringConverter_2 := AbtStringConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 433);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 152);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	conn7 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	conn8 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	self attributeConnections add: (conn17 := AbtAttributeToAttributeConnection new
		connectSource: priceField
		featureName: #object
		feature: AbtTextView IS_object
		toTarget: aIngredient_1
		variableFeatureName: #price
		featureSelector: #'IS_price').
	self attributeConnections add: (conn18 := AbtAttributeToAttributeConnection new
		connectSource: weightField
		featureName: #object
		feature: AbtTextView IS_object
		toTarget: aIngredient_1
		variableFeatureName: #weight
		featureSelector: #'IS_weight').
	self attributeConnections add: (conn19 := AbtAttributeToAttributeConnection new
		connectSource: descriptionField
		featureName: #object
		feature: AbtTextView IS_object
		toTarget: aIngredient_1
		variableFeatureName: #description
		featureSelector: #'IS_description').
	self attributeConnections add: (conn29 := AbtAttributeToAttributeConnection new
		connectSource: nameField
		featureName: #object
		feature: AbtTextView IS_object
		toTarget: aIngredient_1
		variableFeatureName: #name
		featureSelector: #'IS_name').
	self attributeConnections add: (conn9 := AbtAttributeToAttributeConnection new
		connectSource: aIngredient_1
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aIngredient
		feature: IngredientView IS_aIngredient).
	conn20 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnFalse
		feature: IngredientView IS_returnFalse.
	conn11 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnTrue
		feature: IngredientView IS_returnTrue.
	conn12 := AbtEventToActionConnection new
		connectSource: window
		featureName: #openedWidget
		feature: AbtShellView IS_openedWidget;
		actionProvider: self
		featureName: #returnFalse
		feature: IngredientView IS_returnFalse.
	self initializeAttributeConnections.
	self finalInitialize.
! !


!Merlin class privateMethods !

runtimeStartUp	

	self abtViewApplicationPackage runtimeStartUp! !


!MerlinCook class privateMethods !

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #LocalRecipeManager put: self IS_LocalRecipeManager;
		featureNamed: #LocalIngredientManager put: self IS_LocalIngredientManager;
		featureNamed: #MerlinRecipeManager put: self IS_MerlinRecipeManager;
		featureNamed: #TotalWeight put: self IS_TotalWeight;
		featureNamed: #TotalPrice put: self IS_TotalPrice!

IS_LocalIngredientManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: IngredientManager;
		 setSelector: #localIngredientManager:;
		 getSelector: #localIngredientManager;
		 changeSymbol: #LocalIngredientManager)!

IS_LocalRecipeManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: RecipeManager;
		 setSelector: #localRecipeManager:;
		 getSelector: #localRecipeManager;
		 changeSymbol: #LocalRecipeManager)!

IS_MerlinRecipeManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: RecipeManager;
		 setSelector: #merlinRecipeManager:;
		 getSelector: #merlinRecipeManager;
		 changeSymbol: #MerlinRecipeManager)!

IS_TotalPrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalPrice:;
		 getSelector: #totalPrice;
		 changeSymbol: #TotalPrice)!

IS_TotalWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalWeight:;
		 getSelector: #totalWeight;
		 changeSymbol: #TotalWeight)! !


!MerlinCook publicMethods !

localIngredientManager
	"Return the value of LocalIngredientManager."

	^localIngredientManager!

localIngredientManager: anIngredientManager
	"Save the value of LocalIngredientManager."

	localIngredientManager := anIngredientManager.
	self signalEvent: #LocalIngredientManager
		 with: anIngredientManager. !

localRecipeManager
	"Return the value of LocalRecipeManager."

	^localRecipeManager!

localRecipeManager: aRecipeManager
	"Save the value of LocalRecipeManager."

	localRecipeManager := aRecipeManager.
	self signalEvent: #LocalRecipeManager
		 with: aRecipeManager. !

merlinRecipeManager
	"Return the value of MerlinRecipeManager."

	^merlinRecipeManager!

merlinRecipeManager: aRecipeManager
	"Save the value of MerlinRecipeManager."

	merlinRecipeManager := aRecipeManager.
	self signalEvent: #MerlinRecipeManager
		 with: aRecipeManager. !

totalPrice
	"Return the value of TotalPrice."

	^totalPrice!

totalPrice: aNumber
	"Save the value of TotalPrice."

	totalPrice := aNumber.
	self signalEvent: #TotalPrice
		 with: aNumber. !

totalWeight
	"Return the value of TotalWeight."

	^totalWeight!

totalWeight: aNumber
	"Save the value of TotalWeight."

	totalWeight := aNumber.
	self signalEvent: #TotalWeight
		 with: aNumber. ! !

!MerlinCook privateMethods !

abtBuildInternals
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for initializing the receiver by
	creating all the subparts and connections specified in the Composition Editor"

	| abtSeparatedConstants window list1 list2 label1 label2 pushButton1 pushButton2 list3 pushButton3
	 pushButton4 label3 label4 label6 label61 list4 label5 label41 label62 existingRecipes
	 existingIngredients merlinCookBook conn0 conn1 conn3 conn4 conn16 conn5 conn6 conn7 conn8 conn9
	 conn10 conn11 conn12 conn13 conn14 conn26 conn17 conn18 conn28 conn19 conn21 conn22 conn32 |
	abtSeparatedConstants := self class abtSeparatedConstants.
	self subpartNamed: 'Window' put: (window := AbtShellView newPart
			subpartNamed: 'List1' put: (list1 := AbtListView newPart);
			subpartNamed: 'List2' put: (list2 := AbtListView newPart);
			subpartNamed: 'Label1' put: (label1 := AbtLabelView newPart);
			subpartNamed: 'Label2' put: (label2 := AbtLabelView newPart);
			subpartNamed: 'Push Button1' put: (pushButton1 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button2' put: (pushButton2 := AbtPushButtonView newPart);
			subpartNamed: 'List3' put: (list3 := AbtListView newPart);
			subpartNamed: 'Push Button3' put: (pushButton3 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button4' put: (pushButton4 := AbtPushButtonView newPart);
			subpartNamed: 'Label3' put: (label3 := AbtLabelView newPart);
			subpartNamed: 'Label4' put: (label4 := AbtLabelView newPart);
			subpartNamed: 'Label6' put: (label6 := AbtLabelView newPart);
			subpartNamed: 'Label61' put: (label61 := AbtLabelView newPart);
			subpartNamed: 'List4' put: (list4 := AbtListView newPart);
			subpartNamed: 'Label5' put: (label5 := AbtLabelView newPart);
			subpartNamed: 'Label41' put: (label41 := AbtLabelView newPart);
			subpartNamed: 'Label62' put: (label62 := AbtLabelView newPart)).
	self subpartNamed: 'Existing Recipes' put: (existingRecipes := RecipeManager newPart abtAttachPart).
	self subpartNamed: 'Existing Ingredients' put: (existingIngredients := IngredientManager newPart abtAttachPart).
	self subpartNamed: 'Merlin Cook Book' put: (merlinCookBook := RecipeManager newPart abtAttachPart).
	self 
		 primaryPart: window.
	window 
		 allowShellResize: false;
		 iconic: false;
		 shellDecorations: 58;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new
				offset: 107);
			rightEdge: (AbtEdgeConstant new
				offset: 501);
			topEdge: (AbtEdgeConstant new
				offset: 28);
			bottomEdge: (AbtEdgeConstant new
				offset: 338));
		 title: (abtSeparatedConstants at: 1)          " 'Merlin Goes Cooking (c) D.D. & V.N. 1997 - All Rights Reserved' " .
	list1 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 20);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 219);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 29);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 75)).
	list2 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 262);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 219);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 29);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 75)).
	label1 
		 object: (abtSeparatedConstants at: 2)          " 'Existing Ingredients' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 68);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 145);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 6);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label2 
		 object: (abtSeparatedConstants at: 3)          " 'Existing Recipes' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 281);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 145);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 6);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton1 
		 object: (abtSeparatedConstants at: 4)          " 'Manage Ingredients' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 60);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 113);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton2 
		 object: (abtSeparatedConstants at: 5)          " 'Manage Recipes' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 302);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 139);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 112);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	list3 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 254);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 219);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 199);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 78)).
	pushButton3 
		 object: (abtSeparatedConstants at: 6)          " 'Plan' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 383);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 56);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 163);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton4 
		 object: (abtSeparatedConstants at: 7)          " 'Unplan' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 303);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 163);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label3 
		 object: (abtSeparatedConstants at: 8)          " 'total price:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 258);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 279);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label4 
		 object: (abtSeparatedConstants at: 9)          " 'total weight:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 258);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 296);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label6 
		 object: (abtSeparatedConstants at: 10)          " 'tot_weight' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 388);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 296);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label61 
		 object: (abtSeparatedConstants at: 11)          " 'tot_price' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 388);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 279);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	list4 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 17);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 219);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 185);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 142)).
	label5 
		 object: (abtSeparatedConstants at: 12)          " 'ingredients to buy:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 17);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 164);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label41 
		 object: (abtSeparatedConstants at: 13)          " 'total cooking time:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 258);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 314);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label62 
		 object: (abtSeparatedConstants at: 14)          " 'tot_time' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 389);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 312);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	self attributeConnections add: (conn0 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #items
		feature: AbtListView IS_items
		toTarget: existingIngredients
		variableFeatureName: #contained
		featureSelector: #'IS_contained').
	self attributeConnections add: (conn1 := AbtAttributeToAttributeConnection new
		connectSource: existingRecipes
		variableFeatureName: #contained
		featureSelector: #'IS_contained'
		toTarget: list2
		featureName: #items
		feature: AbtListView IS_items).
	conn3 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: existingRecipes
		variableFeatureName: #manage
		featureSelector: #'IS_manage'.
	self attributeConnections add: (conn4 := AbtAttributeToAttributeConnection new
		connectSource: existingIngredients
		variableFeatureName: #self
		featureSelector: #'IS_self'
		toTarget: existingRecipes
		variableFeatureName: #aIngredientManager
		featureSelector: #'IS_aIngredientManager').
	conn16 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: existingIngredients
		variableFeatureName: #manage
		featureSelector: #'IS_manage'.
	self attributeConnections add: (conn5 := AbtAttributeToAttributeConnection new
		connectSource: list2
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid
		toTarget: pushButton3
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled).
	self attributeConnections add: (conn6 := AbtAttributeToAttributeConnection new
		connectSource: existingRecipes
		variableFeatureName: #self
		featureSelector: #'IS_self'
		toTarget: self
		featureName: #LocalRecipeManager
		feature: MerlinCook IS_LocalRecipeManager).
	self attributeConnections add: (conn7 := AbtAttributeToAttributeConnection new
		connectSource: existingIngredients
		variableFeatureName: #self
		featureSelector: #'IS_self'
		toTarget: self
		featureName: #LocalIngredientManager
		feature: MerlinCook IS_LocalIngredientManager).
	self attributeConnections add: (conn8 := AbtAttributeToAttributeConnection new
		connectSource: merlinCookBook
		variableFeatureName: #contained
		featureSelector: #'IS_contained'
		toTarget: list3
		featureName: #items
		feature: AbtListView IS_items).
	conn9 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: merlinCookBook
		variableFeatureName: #add:
		featureSelector: #'IS_add_'.
	self attributeConnections add: (conn10 := AbtAttributeToAttributeConnection new
		connectSource: list2
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn9
		variableFeatureName: 'aCookableObject'
		featureSelector: #'IS_aCookableObject').
	self attributeConnections add: (conn11 := AbtAttributeToAttributeConnection new
		connectSource: merlinCookBook
		variableFeatureName: #self
		featureSelector: #'IS_self'
		toTarget: self
		featureName: #MerlinRecipeManager
		feature: MerlinCook IS_MerlinRecipeManager).
	conn12 := AbtEventToActionConnection new
		connectSource: pushButton4
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: merlinCookBook
		variableFeatureName: #remove:
		featureSelector: #'IS_remove_'.
	self attributeConnections add: (conn13 := AbtAttributeToAttributeConnection new
		connectSource: list3
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn12
		variableFeatureName: 'aCookable'
		featureSelector: #'IS_aCookable').
	self attributeConnections add: (conn14 := AbtAttributeToAttributeConnection new
		connectSource: list3
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid
		toTarget: pushButton4
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled).
	self attributeConnections add: (conn26 := AbtAttributeToAttributeConnection new
		connectSource: label6
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: merlinCookBook
		variableFeatureName: #totalWeight
		featureSelector: #'IS_totalWeight').
	conn17 := AbtEventToActionConnection new
		connectSource: window
		featureName: #aboutToOpenWidget
		feature: AbtShellView IS_aboutToOpenWidget;
		actionProvider: merlinCookBook
		variableFeatureName: #recalculatePrice
		featureSelector: #'IS_recalculatePrice'.
	conn18 := AbtEventToActionConnection new
		connectSource: window
		featureName: #aboutToOpenWidget
		feature: AbtShellView IS_aboutToOpenWidget;
		actionProvider: merlinCookBook
		variableFeatureName: #recalculateWeight
		featureSelector: #'IS_recalculateWeight'.
	self attributeConnections add: (conn28 := AbtAttributeToAttributeConnection new
		connectSource: label61
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: merlinCookBook
		variableFeatureName: #totalPrice
		featureSelector: #'IS_totalPrice').
	self attributeConnections add: (conn19 := AbtAttributeToAttributeConnection new
		connectSource: list4
		featureName: #items
		feature: AbtListView IS_items
		toTarget: merlinCookBook
		variableFeatureName: #ingredientBag
		featureSelector: #'IS_ingredientBag').
	conn21 := AbtEventToActionConnection new
		connectSource: existingRecipes
		variableFeatureName: #update
		featureSelector: #'IS_update';
		actionProvider: merlinCookBook
		variableFeatureName: #recalculateBag
		featureSelector: #'IS_recalculateBag'.
	self attributeConnections add: (conn22 := AbtAttributeToAttributeConnection new
		connectSource: label62
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: merlinCookBook
		variableFeatureName: #totalTime
		featureSelector: #'IS_totalTime').
	conn32 := AbtEventToActionConnection new
		connectSource: window
		featureName: #aboutToOpenWidget
		feature: AbtShellView IS_aboutToOpenWidget;
		actionProvider: merlinCookBook
		variableFeatureName: #recalculateTime
		featureSelector: #'IS_recalculateTime'.
	self initializeAttributeConnections.
	self finalInitialize.
! !


!Recipe class publicMethods !

new
	"construct a new recipe (recursive cookable)"

	| aRecipeNew |
	
	aRecipeNew := super new.
	aRecipeNew salePrice: 0.
	aRecipeNew saleWeight: 0.
	aRecipeNew ingredients: OrderedCollection new.

	^aRecipeNew.
! !

!Recipe class privateMethods !

IS_add_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aIngredient');
			 yourself);
		 selector: #add:)!

IS_ingredients
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: OrderedCollection;
		 setSelector: #ingredients:;
		 getSelector: #ingredients;
		 changeSymbol: #ingredients)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #ingredients put: self IS_ingredients;
		featureNamed: #salePrice put: self IS_salePrice;
		featureNamed: #time put: self IS_time;
		featureNamed: #add: put: self IS_add_;
		featureNamed: #remove: put: self IS_remove_;
		featureNamed: #weight put: self IS_weight;
		featureNamed: #saleWeight put: self IS_saleWeight;
		featureNamed: #saleTime put: self IS_saleTime!

IS_remove_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aIngredient');
			 yourself);
		 selector: #remove:)!

IS_salePrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Decimal;
		 setSelector: #salePrice:;
		 getSelector: #salePrice;
		 changeSymbol: #salePrice)!

IS_saleTime
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #saleTime:;
		 getSelector: #saleTime;
		 changeSymbol: #saleTime)!

IS_saleWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #saleWeight:;
		 getSelector: #saleWeight;
		 changeSymbol: #saleWeight)!

IS_time
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #time:;
		 getSelector: #time;
		 changeSymbol: #time)!

IS_weight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #weight)! !


!Recipe publicMethods !

add: aIngredient
	"add a cookable to the bag"

	ingredients add: aIngredient!

collectBag

	| aNewContainer |

	aNewContainer := OrderedCollection new.
	ingredients do: 
		[:each | aNewContainer := aNewContainer, each collectBag].
	^ aNewContainer.!

ingredients
	"Return the value of ingredients."

	^ingredients!

ingredients: anOrderedCollection
	"Save the value of ingredients."

	ingredients := anOrderedCollection.
	self signalEvent: #ingredients
		 with: anOrderedCollection. !

openOn: aIngredientManager with: aRecipeManager 
	"show and modify the element"

	| aRView |
	aRView := RecipeView new: aIngredientManager with: aRecipeManager.
	aRView openOn: self.!

price
	"get the price of the recipe"

	| aPrice |
	aPrice := self salePrice.
	ingredients do: [:each | aPrice := aPrice + each price].
	^ aPrice 
	!

price: aPrice

	self salePrice: aPrice.!

remove: aIngredient
	"remove a cookable to the bag"

	ingredients remove: aIngredient!

salePrice
	"Return the value of salePrice."

	^salePrice!

salePrice: aDecimal
	"Save the value of salePrice."

	salePrice := aDecimal.
	self signalEvent: #salePrice
		 with: aDecimal. !

saleTime
	"Return the value of saleTime."

	^saleTime!

saleTime: aNumber
	"Save the value of saleTime."

	saleTime := aNumber.
	self signalEvent: #saleTime
		 with: aNumber. !

saleWeight
	"Return the value of saleWeight."

	^saleWeight!

saleWeight: aNumber
	"Save the value of saleWeight."

	saleWeight := aNumber.
	self signalEvent: #saleWeight
		 with: aNumber. !

time
	"Return the value of time."

	| aTime |
	aTime := self saleTime.
	ingredients do: [:each | aTime := aTime + each time].
	^ aTime 
!

time: aNumber
	"Save the value of time."

	saleTime := aNumber.
	self signalEvent: #time
		 with: aNumber. !

weight
	"get the weight of all ingredients in the recipe"

	| aWeight |
	aWeight := self saleWeight.
	ingredients do: [:each | aWeight := aWeight + each weight].
	^ aWeight 
	!

weight: aWeight

	self saleWeight: aWeight.! !


!RecipeManager class privateMethods !

IS_addNew
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #addNew)!

IS_aIngredientManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: IngredientManager;
		 setSelector: #aIngredientManager:;
		 getSelector: #aIngredientManager;
		 changeSymbol: #aIngredientManager)!

IS_edit_
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 add: (AbtParameterSpec new parameterType: Object; parameterName: 'aRecipe');
			 yourself);
		 selector: #edit:)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #addNew put: self IS_addNew;
		featureNamed: #edit: put: self IS_edit_;
		featureNamed: #update put: self IS_update;
		featureNamed: #manage put: self IS_manage;
		featureNamed: #aIngredientManager put: self IS_aIngredientManager!

IS_manage
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #manage)!

IS_update
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtEventSpec new
		 symbol: #update)! !


!RecipeManager publicMethods !

addNew
	"Perform the addNew action."

	| aRecipe |

	aRecipe := Recipe new.	
	(self edit: aRecipe)
		ifTrue: [^contained add: aRecipe].
!

aIngredientManager
	"Return the value of aIngredientManager."

	^aIngredientManager!

aIngredientManager: anIngredientManager
	"Save the value of aIngredientManager."

	aIngredientManager := anIngredientManager.
	self signalEvent: #aIngredientManager
		 with: anIngredientManager. !

edit: aRecipe
	"Perform the edit: action."

	| aRView |
	
	aRView := RecipeView new: aIngredientManager with: self.
	aRView openOn: aRecipe.
	aRView suspendExecutionUntilRemoved.
	self signalEvent: #update.

	^aRView result.!

manage

	| aView oldContained |

	oldContained := self contained deepCopy.
	
	aView := RecipeManagerView new: aIngredientManager with: self.
	aView openOn: self.
	aView suspendExecutionUntilRemoved.
	
	aView result
		ifFalse: [self contained: oldContained deepCopy].


! !


!RecipeManagerView class publicMethods !

new: anaIngredientManager with: anaRecipeManager
	
	| aRecipeManagerView |
	aRecipeManagerView := super new.
	aRecipeManagerView aIngredientManager: anaIngredientManager.
	aRecipeManagerView aRecipeManager: anaRecipeManager.
	^aRecipeManagerView.! !

!RecipeManagerView class privateMethods !

IS_addPressed
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtSubpartEventSpec new
		 symbol: #addPressed;
		 subpartFeatureName: #clicked;
		 subpartName: 'AddRecipe')!

IS_aIngredientManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: IngredientManager;
		 setSelector: #aIngredientManager:;
		 getSelector: #aIngredientManager;
		 changeSymbol: #aIngredientManager)!

IS_aRecipeManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: RecipeManager;
		 setSelector: #aRecipeManager:;
		 getSelector: #aRecipeManager;
		 changeSymbol: #aRecipeManager)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #addPressed put: self IS_addPressed;
		featureNamed: #aRecipeManager put: self IS_aRecipeManager;
		featureNamed: #aIngredientManager put: self IS_aIngredientManager;
		featureNamed: #result put: self IS_result;
		featureNamed: #returnTrue put: self IS_returnTrue;
		featureNamed: #returnFalse put: self IS_returnFalse!

IS_result
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #result:;
		 getSelector: #result;
		 changeSymbol: #result)!

IS_returnFalse
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnFalse)!

IS_returnTrue
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnTrue)! !


!RecipeManagerView publicMethods !

aIngredientManager
	"Return the value of aIngredientManager."

	^aIngredientManager!

aIngredientManager: anIngredientManager
	"Save the value of aIngredientManager."

	aIngredientManager := anIngredientManager.
	self signalEvent: #aIngredientManager
		 with: anIngredientManager. !

aRecipeManager
	"Return the value of aRecipeManager."

	^aRecipeManager!

aRecipeManager: anaRecipeManager
	"Save the value of aRecipeManager."

	aRecipeManager := anaRecipeManager.
	self signalEvent: #aRecipeManager
		 with: anaRecipeManager. !

openOn: anaRecipeManager

	self aRecipeManager: anaRecipeManager.	
	self openApplicationModalWidget.
!

result
	"Return the value of result."

	^result!

result: aBoolean
	"Save the value of result."

	result := aBoolean.
	self signalEvent: #result
		 with: aBoolean. !

returnFalse

	self result: false.!

returnTrue

	self result: true.! !

!RecipeManagerView privateMethods !

abtBuildInternals
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for initializing the receiver by
	creating all the subparts and connections specified in the Composition Editor"

	| abtSeparatedConstants window label1 recipesList addRecipe removeRecipe pushButton1 pushButton2
	 pushButton3 recipeManagerVar conn13 conn1 conn2 conn3 conn5 conn6 conn7 conn11 conn12 conn22 conn23
	 conn14 conn15 conn16 |
	abtSeparatedConstants := self class abtSeparatedConstants.
	self subpartNamed: 'Window' put: (window := AbtShellView newPart
			subpartNamed: 'Label1' put: (label1 := AbtLabelView newPart);
			subpartNamed: 'RecipesList' put: (recipesList := AbtListView newPart);
			subpartNamed: 'AddRecipe' put: (addRecipe := AbtPushButtonView newPart);
			subpartNamed: 'RemoveRecipe' put: (removeRecipe := AbtPushButtonView newPart);
			subpartNamed: 'Push Button1' put: (pushButton1 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button2' put: (pushButton2 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button3' put: (pushButton3 := AbtPushButtonView newPart)).
	self subpartNamed: 'Recipe Manager Var' put: (recipeManagerVar := AbtVariable newPart abtAttachPart).
	self 
		 primaryPart: window.
	window 
		 shellDecorations: 122;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new
				offset: 39);
			rightEdge: (AbtEdgeConstant new
				offset: 366);
			topEdge: (AbtEdgeConstant new
				offset: 20);
			bottomEdge: (AbtEdgeConstant new
				offset: 240));
		 title: (abtSeparatedConstants at: 1)          " 'Recipe Manager' " .
	label1 
		 object: #'Available Recipes';
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 7);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 14);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	recipesList 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 3);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 356);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 34);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 109)).
	addRecipe 
		 object: (abtSeparatedConstants at: 2)          " 'Add' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 258);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 97);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 161);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	removeRecipe 
		 object: (abtSeparatedConstants at: 3)          " 'Remove' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 12);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 97);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 161);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	pushButton1 
		 object: (abtSeparatedConstants at: 4)          " 'Edit' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 134);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 94);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 162);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 24)).
	pushButton2 
		 object: (abtSeparatedConstants at: 5)          " 'OK' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 214);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 88);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 203);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton3 
		 object: (abtSeparatedConstants at: 6)          " 'Cancel' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 61);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 88);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 203);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 26)).
	self attributeConnections add: (conn13 := AbtAttributeToAttributeConnection new
		connectSource: recipesList
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid
		toTarget: removeRecipe
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled).
	conn1 := AbtEventToActionConnection new
		connectSource: removeRecipe
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: recipeManagerVar
		variableFeatureName: #remove:
		featureSelector: #'IS_remove_'.
	self attributeConnections add: (conn2 := AbtAttributeToAttributeConnection new
		connectSource: recipesList
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn1
		variableFeatureName: 'aCookable'
		featureSelector: #'IS_aCookable').
	conn3 := AbtEventToActionConnection new
		connectSource: addRecipe
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: recipeManagerVar
		variableFeatureName: #addNew
		featureSelector: #'IS_addNew'.
	conn5 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: recipeManagerVar
		variableFeatureName: #edit:
		featureSelector: #'IS_edit_'.
	self attributeConnections add: (conn6 := AbtAttributeToAttributeConnection new
		connectSource: recipesList
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn5
		variableFeatureName: 'aRecipe'
		featureSelector: #'IS_aRecipe').
	self attributeConnections add: (conn7 := AbtAttributeToAttributeConnection new
		connectSource: recipesList
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid
		toTarget: pushButton1
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled).
	conn11 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	conn12 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	self attributeConnections add: (conn22 := AbtAttributeToAttributeConnection new
		connectSource: recipesList
		featureName: #items
		feature: AbtListView IS_items
		toTarget: recipeManagerVar
		variableFeatureName: #contained
		featureSelector: #'IS_contained').
	self attributeConnections add: (conn23 := AbtAttributeToAttributeConnection new
		connectSource: recipeManagerVar
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aRecipeManager
		feature: RecipeManagerView IS_aRecipeManager).
	conn14 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnFalse
		feature: RecipeManagerView IS_returnFalse.
	conn15 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnTrue
		feature: RecipeManagerView IS_returnTrue.
	conn16 := AbtEventToActionConnection new
		connectSource: window
		featureName: #openedWidget
		feature: AbtShellView IS_openedWidget;
		actionProvider: self
		featureName: #returnFalse
		feature: RecipeManagerView IS_returnFalse.
	self initializeAttributeConnections.
	self finalInitialize.
! !


!RecipeView class publicMethods !

new: aIngredientManagerIncoming with: aRecipeManagerIncoming
	
	^ super new initialize: aIngredientManagerIncoming with: aRecipeManagerIncoming.! !

!RecipeView class privateMethods !

IS_aIngredientManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: IngredientManager;
		 setSelector: #aIngredientManager:;
		 getSelector: #aIngredientManager;
		 changeSymbol: #aIngredientManager)!

IS_aRecipe
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Recipe;
		 setSelector: #aRecipe:;
		 getSelector: #aRecipe;
		 changeSymbol: #aRecipe)!

IS_aRecipeManager
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: RecipeManager;
		 setSelector: #aRecipeManager:;
		 getSelector: #aRecipeManager;
		 changeSymbol: #aRecipeManager)!

IS_instanceInterfaceSpec
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^AbtInterfaceSpec new
		featureNamed: #aRecipe put: self IS_aRecipe;
		featureNamed: #aIngredientManager put: self IS_aIngredientManager;
		featureNamed: #aRecipeManager put: self IS_aRecipeManager;
		featureNamed: #Result put: self IS_Result;
		featureNamed: #returnTrue put: self IS_returnTrue;
		featureNamed: #returnFalse put: self IS_returnFalse;
		featureNamed: #TotalWeight put: self IS_TotalWeight;
		featureNamed: #recalculateWeight put: self IS_recalculateWeight;
		featureNamed: #TotalPrice put: self IS_TotalPrice;
		featureNamed: #recalculatePrice put: self IS_recalculatePrice;
		featureNamed: #TotalTime put: self IS_TotalTime!

IS_recalculatePrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculatePrice)!

IS_recalculateWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #recalculateWeight)!

IS_Result
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Boolean;
		 setSelector: #result:;
		 getSelector: #result;
		 changeSymbol: #Result)!

IS_returnFalse
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnFalse)!

IS_returnTrue
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtActionSpec new
		 parameters: (OrderedCollection new
			 yourself);
		 selector: #returnTrue)!

IS_TotalPrice
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalPrice:;
		 getSelector: #totalPrice;
		 changeSymbol: #TotalPrice)!

IS_TotalTime
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalTime:;
		 getSelector: #totalTime;
		 changeSymbol: #TotalTime)!

IS_TotalWeight
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for returning a featureSpec
	that describes the implementation of a particular feature of the receiver"

	^##(AbtAttributeSpec new
		 attributeType: Number;
		 setSelector: #totalWeight:;
		 getSelector: #totalWeight;
		 changeSymbol: #TotalWeight)! !


!RecipeView publicMethods !

aIngredientManager
	"Return the value of aIngredientManager."

	^aIngredientManager!

aIngredientManager: anIngredientManager
	"Save the value of aIngredientManager."

	aIngredientManager := anIngredientManager.
	self signalEvent: #aIngredientManager
		 with: anIngredientManager. !

aRecipe
	"Return the value of aRecipe."

	^aRecipe!

aRecipe: anaRecipe
	"Save the value of aRecipe."

	aRecipe := anaRecipe.

	self recalculateWeight.
	self recalculatePrice.
	self recalculateTime.

	self signalEvent: #aRecipe
		 with: anaRecipe. !

aRecipeManager
	"Return the value of aRecipeManager."

	^aRecipeManager!

aRecipeManager: anaRecipeManager
	"Save the value of aRecipeManager."

	aRecipeManager := anaRecipeManager.
	self signalEvent: #aRecipeManager
		 with: anaRecipeManager. !

initialize: aIngredientManagerIncoming with: aRecipeManagerIncoming

	self aIngredientManager: aIngredientManagerIncoming.
	self aRecipeManager: aRecipeManagerIncoming.
!

openOn: aRecipeIncoming
	
	"show a recipe contents"
	
	self aRecipe: aRecipeIncoming.	
	self openApplicationModalWidget.!

recalculatePrice
	
	self totalPrice: self aRecipe price.
	!

recalculateTime
	
	self totalTime: self aRecipe time.
	!

recalculateWeight
	
	self totalWeight: self aRecipe weight.
	!

result
	"Return the value of Result."

	^result!

result: aBoolean
	"Save the value of Result."

	result := aBoolean.
	self signalEvent: #Result
		 with: aBoolean. !

returnFalse

	self result: false.!

returnTrue

	self result: true.!

totalPrice
	"Return the value of TotalPrice."

	^totalPrice!

totalPrice: aNumber
	"Save the value of TotalPrice."

	totalPrice := aNumber.
	self signalEvent: #TotalPrice
		 with: aNumber. !

totalTime
	"Return the value of TotalTime."

	^totalTime!

totalTime: aNumber
	"Save the value of TotalTime."

	totalTime := aNumber.
	self signalEvent: #TotalTime
		 with: aNumber. !

totalWeight
	"Return the value of TotalWeight."

	^totalWeight!

totalWeight: aNumber
	"Save the value of TotalWeight."

	totalWeight := aNumber.
	self signalEvent: #TotalWeight
		 with: aNumber. ! !

!RecipeView privateMethods !

abtBuildInternals
	"Private - ** Warning ** This method is generated by VisualAge and should not
	be modified or deleted. This method is responsible for initializing the receiver by
	creating all the subparts and connections specified in the Composition Editor"

	| abtSeparatedConstants window descriptionLabel descriptionField abtStringConverter nameLabel
	 nameField abtStringConverter_1 salePriceLabel salePriceField abtDecimalConverter timeLabel
	 timeField abtNumberConverter label1 list1 pushButton1 pushButton2 list2 label2 pushButton3
	 pushButton4 list21 label21 pushButton31 pushButton5 pushButton6 salePriceLabel1 salePriceField1
	 abtDecimalConverter_1 label3 label4 label5 label6 label51 label61 aRecipe_1 ingredientManagerVar
	 recipeManagerVar conn2 conn12 conn6 conn10 conn11 conn22 conn13 conn14 conn15 conn16 conn17 conn18
	 conn19 conn20 conn21 conn32 conn23 conn24 conn25 conn26 conn27 conn28 conn35 conn36 conn37 conn38
	 conn47 conn58 conn48 conn29 conn30 conn31 |
	abtSeparatedConstants := self class abtSeparatedConstants.
	self subpartNamed: 'Window' put: (window := AbtShellView newPart
			subpartNamed: 'descriptionLabel' put: (descriptionLabel := AbtLabelView newPart);
			subpartNamed: 'descriptionField' put: (descriptionField := AbtTextView newPart);
			subpartNamed: 'nameLabel' put: (nameLabel := AbtLabelView newPart);
			subpartNamed: 'nameField' put: (nameField := AbtTextView newPart);
			subpartNamed: 'salePriceLabel' put: (salePriceLabel := AbtLabelView newPart);
			subpartNamed: 'salePriceField' put: (salePriceField := AbtTextView newPart);
			subpartNamed: 'timeLabel' put: (timeLabel := AbtLabelView newPart);
			subpartNamed: 'timeField' put: (timeField := AbtTextView newPart);
			subpartNamed: 'Label1' put: (label1 := AbtLabelView newPart);
			subpartNamed: 'List1' put: (list1 := AbtListView newPart);
			subpartNamed: 'Push Button1' put: (pushButton1 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button2' put: (pushButton2 := AbtPushButtonView newPart);
			subpartNamed: 'List2' put: (list2 := AbtListView newPart);
			subpartNamed: 'Label2' put: (label2 := AbtLabelView newPart);
			subpartNamed: 'Push Button3' put: (pushButton3 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button4' put: (pushButton4 := AbtPushButtonView newPart);
			subpartNamed: 'List21' put: (list21 := AbtListView newPart);
			subpartNamed: 'Label21' put: (label21 := AbtLabelView newPart);
			subpartNamed: 'Push Button31' put: (pushButton31 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button5' put: (pushButton5 := AbtPushButtonView newPart);
			subpartNamed: 'Push Button6' put: (pushButton6 := AbtPushButtonView newPart);
			subpartNamed: 'salePriceLabel1' put: (salePriceLabel1 := AbtLabelView newPart);
			subpartNamed: 'salePriceField1' put: (salePriceField1 := AbtTextView newPart);
			subpartNamed: 'Label3' put: (label3 := AbtLabelView newPart);
			subpartNamed: 'Label4' put: (label4 := AbtLabelView newPart);
			subpartNamed: 'Label5' put: (label5 := AbtLabelView newPart);
			subpartNamed: 'Label6' put: (label6 := AbtLabelView newPart);
			subpartNamed: 'Label51' put: (label51 := AbtLabelView newPart);
			subpartNamed: 'Label61' put: (label61 := AbtLabelView newPart)).
	self subpartNamed: 'aRecipe' put: (aRecipe_1 := AbtVariable newPart abtAttachPart).
	self subpartNamed: 'Ingredient Manager Var' put: (ingredientManagerVar := AbtVariable newPart abtAttachPart).
	self subpartNamed: 'Recipe Manager Var' put: (recipeManagerVar := AbtVariable newPart abtAttachPart).
	self 
		 primaryPart: window.
	window 
		 shellDecorations: 122;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtEdgeConstant new
				offset: 115);
			rightEdge: (AbtEdgeConstant new
				offset: 377);
			topEdge: (AbtEdgeConstant new
				offset: 7);
			bottomEdge: (AbtEdgeConstant new
				offset: 403));
		 title: (abtSeparatedConstants at: 1)          " 'Recipe' " .
	descriptionLabel 
		 object: #description;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 40);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 85);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 30);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 16)).
	descriptionField 
		 converter: (abtStringConverter := AbtStringConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 189);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 28);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 20)).
	nameLabel 
		 object: #name;
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 40);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 85);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 7);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 16)).
	nameField 
		 converter: (abtStringConverter_1 := AbtStringConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 189);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 4);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 20)).
	salePriceLabel 
		 object: #'additional price:';
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 40);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 137);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 53);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 17)).
	salePriceField 
		 converter: (abtDecimalConverter := AbtDecimalConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 189);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 52);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 20)).
	timeLabel 
		 object: #'cooking time:';
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 40);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 85);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 99);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 16)).
	timeField 
		 converter: (abtNumberConverter := AbtNumberConverter newPart);
		 object: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 189);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 100);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 20)).
	label1 
		 object: (abtSeparatedConstants at: 2)          " 'Ingredients' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 15);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 134);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	list1 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 10);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 154);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 159);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 157)).
	pushButton1 
		 object: (abtSeparatedConstants at: 3)          " 'OK' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 228);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 73);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 373);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 25)).
	pushButton2 
		 object: (abtSeparatedConstants at: 4)          " 'Cancel' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 76);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 73);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 373);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 25)).
	list2 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 215);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 154);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 159);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 63)).
	label2 
		 object: (abtSeparatedConstants at: 5)          " 'Ingredients:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 218);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 132);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton3 
		 object: (abtSeparatedConstants at: 6)          " 'Manage' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 308);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 129);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton4 
		 object: (abtSeparatedConstants at: 7)          " '<<' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 176);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 171);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	list21 
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 214);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 154);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 256);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 63)).
	label21 
		 object: (abtSeparatedConstants at: 8)          " 'Recipes:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 217);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 229);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton31 
		 object: (abtSeparatedConstants at: 9)          " 'Manage' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 307);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 226);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton5 
		 object: (abtSeparatedConstants at: 10)          " '>>' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 177);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 224);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	pushButton6 
		 object: (abtSeparatedConstants at: 11)          " '<<' " ;
		 accelerator: nil;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 175);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 274);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	salePriceLabel1 
		 object: #'additional weight:';
		 alignment: 0;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 40);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 144);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 76);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 17)).
	salePriceField1 
		 converter: (abtDecimalConverter_1 := AbtDecimalConverter newPart);
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 189);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 168);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 76);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHSELFOPPOSITE; offset: 20)).
	label3 
		 object: (abtSeparatedConstants at: 12)          " 'tot_weight' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 100);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 321);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label4 
		 object: (abtSeparatedConstants at: 13)          " 'total weight:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 15);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 321);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label5 
		 object: (abtSeparatedConstants at: 14)          " 'total price:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 25);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 338);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label6 
		 object: (abtSeparatedConstants at: 15)          " 'tot_price' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 100);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 338);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label51 
		 object: (abtSeparatedConstants at: 16)          " 'total time:' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 202);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 336);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	label61 
		 object: (abtSeparatedConstants at: 17)          " 'tot_time' " ;
		 framingSpec: (AbtViewAttachmentConstraint new
			leftEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 277);
			rightEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE);
			topEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHFORM; offset: 336);
			bottomEdge: (AbtRunEdgeAttachmentConstraint new attachment: XmATTACHNONE)).
	conn2 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	self attributeConnections add: (conn12 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		variableFeatureName: #ingredients
		featureSelector: #'IS_ingredients'
		toTarget: list1
		featureName: #items
		feature: AbtListView IS_items).
	self attributeConnections add: (conn6 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aRecipe
		feature: RecipeView IS_aRecipe).
	conn10 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		variableFeatureName: #closeWidget
		featureSelector: #'IS_closeWidget'.
	self attributeConnections add: (conn11 := AbtAttributeToAttributeConnection new
		connectSource: pushButton4
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled
		toTarget: list2
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid).
	self attributeConnections add: (conn22 := AbtAttributeToAttributeConnection new
		connectSource: ingredientManagerVar
		variableFeatureName: #contained
		featureSelector: #'IS_contained'
		toTarget: list2
		featureName: #items
		feature: AbtListView IS_items).
	conn13 := AbtEventToActionConnection new
		connectSource: pushButton3
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: ingredientManagerVar
		variableFeatureName: #manage
		featureSelector: #'IS_manage'.
	self attributeConnections add: (conn14 := AbtAttributeToAttributeConnection new
		connectSource: ingredientManagerVar
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aIngredientManager
		feature: RecipeView IS_aIngredientManager).
	conn15 := AbtEventToActionConnection new
		connectSource: pushButton4
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: aRecipe_1
		variableFeatureName: #add:
		featureSelector: #'IS_add_'.
	self attributeConnections add: (conn16 := AbtAttributeToAttributeConnection new
		connectSource: list2
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn15
		variableFeatureName: 'aIngredient'
		featureSelector: #'IS_aIngredient').
	self attributeConnections add: (conn17 := AbtAttributeToAttributeConnection new
		connectSource: pushButton5
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled
		toTarget: list1
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid).
	self attributeConnections add: (conn18 := AbtAttributeToAttributeConnection new
		connectSource: pushButton6
		featureName: #enabled
		feature: AbtPushButtonView IS_enabled
		toTarget: list21
		featureName: #selectionIsValid
		feature: AbtListView IS_selectionIsValid).
	self attributeConnections add: (conn19 := AbtAttributeToAttributeConnection new
		connectSource: recipeManagerVar
		featureName: #self
		feature: AbtVariable IS_self
		toTarget: self
		featureName: #aRecipeManager
		feature: RecipeView IS_aRecipeManager).
	self attributeConnections add: (conn20 := AbtAttributeToAttributeConnection new
		connectSource: recipeManagerVar
		variableFeatureName: #contained
		featureSelector: #'IS_contained'
		toTarget: list21
		featureName: #items
		feature: AbtListView IS_items).
	conn21 := AbtEventToActionConnection new
		connectSource: pushButton31
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: recipeManagerVar
		variableFeatureName: #manage
		featureSelector: #'IS_manage'.
	conn32 := AbtEventToActionConnection new
		connectSource: pushButton6
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: aRecipe_1
		variableFeatureName: #add:
		featureSelector: #'IS_add_'.
	self attributeConnections add: (conn23 := AbtAttributeToAttributeConnection new
		connectSource: list21
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn32
		variableFeatureName: 'aIngredient'
		featureSelector: #'IS_aIngredient').
	conn24 := AbtEventToActionConnection new
		connectSource: pushButton5
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: aRecipe_1
		variableFeatureName: #remove:
		featureSelector: #'IS_remove_'.
	self attributeConnections add: (conn25 := AbtAttributeToAttributeConnection new
		connectSource: list1
		featureName: #selectedItem
		feature: AbtListView IS_selectedItem
		toTarget: conn24
		variableFeatureName: 'aIngredient'
		featureSelector: #'IS_aIngredient').
	conn26 := AbtEventToActionConnection new
		connectSource: pushButton1
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnTrue
		feature: RecipeView IS_returnTrue.
	conn27 := AbtEventToActionConnection new
		connectSource: pushButton2
		featureName: #clicked
		feature: AbtPushButtonView IS_clicked;
		actionProvider: self
		featureName: #returnFalse
		feature: RecipeView IS_returnFalse.
	conn28 := AbtEventToActionConnection new
		connectSource: window
		featureName: #openedWidget
		feature: AbtShellView IS_openedWidget;
		actionProvider: self
		featureName: #returnFalse
		feature: RecipeView IS_returnFalse.
	self attributeConnections add: (conn35 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		variableFeatureName: #name
		featureSelector: #'IS_name'
		toTarget: nameField
		featureName: #object
		feature: AbtTextView IS_object).
	self attributeConnections add: (conn36 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		variableFeatureName: #description
		featureSelector: #'IS_description'
		toTarget: descriptionField
		featureName: #object
		feature: AbtTextView IS_object).
	self attributeConnections add: (conn37 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		variableFeatureName: #salePrice
		featureSelector: #'IS_salePrice'
		toTarget: salePriceField
		featureName: #object
		feature: AbtTextView IS_object).
	self attributeConnections add: (conn38 := AbtAttributeToAttributeConnection new
		connectSource: aRecipe_1
		variableFeatureName: #time
		featureSelector: #'IS_time'
		toTarget: timeField
		featureName: #object
		feature: AbtTextView IS_object).
	self attributeConnections add: (conn47 := AbtAttributeToAttributeConnection new
		connectSource: salePriceField1
		featureName: #object
		feature: AbtTextView IS_object
		toTarget: aRecipe_1
		variableFeatureName: #saleWeight
		featureSelector: #'IS_saleWeight').
	conn58 := AbtEventToActionConnection new
		connectSource: salePriceField1
		featureName: #losingFocus
		feature: AbtTextView IS_losingFocus;
		actionProvider: self
		featureName: #recalculateWeight
		feature: RecipeView IS_recalculateWeight.
	self attributeConnections add: (conn48 := AbtAttributeToAttributeConnection new
		connectSource: label3
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: self
		featureName: #TotalWeight
		feature: RecipeView IS_TotalWeight).
	self attributeConnections add: (conn29 := AbtAttributeToAttributeConnection new
		connectSource: label6
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: self
		featureName: #TotalPrice
		feature: RecipeView IS_TotalPrice).
	conn30 := AbtEventToActionConnection new
		connectSource: salePriceField
		featureName: #object
		feature: AbtTextView IS_object;
		actionProvider: self
		featureName: #recalculatePrice
		feature: RecipeView IS_recalculatePrice.
	self attributeConnections add: (conn31 := AbtAttributeToAttributeConnection new
		connectSource: label61
		featureName: #object
		feature: AbtLabelView IS_object
		toTarget: self
		featureName: #TotalTime
		feature: RecipeView IS_TotalTime).
	self initializeAttributeConnections.
	self finalInitialize.
! !


IngredientManagerView initializeAfterLoad!
IngredientView initializeAfterLoad!
MerlinCook initializeAfterLoad!
RecipeManagerView initializeAfterLoad!
RecipeView initializeAfterLoad!
MerlinAbtPackage initializeAfterLoad!
Cookable initializeAfterLoad!
Ingredient initializeAfterLoad!
Recipe initializeAfterLoad!
CookableManager initializeAfterLoad!
IngredientManager initializeAfterLoad!
RecipeManager initializeAfterLoad!
Merlin initializeAfterLoad!

Merlin loaded!